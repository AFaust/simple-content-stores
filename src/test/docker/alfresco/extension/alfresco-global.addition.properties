# 
# Copyright 2017 - 2019 Acosix GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# note: this file is not named alfresco-global.properties to not override the default file in the image
# instead it relies on Dockerfile post-processing to merge with the default file

# Enable addon and configure common / sensible constellations of stores

simpleContentStores.enabled=true

# need eager orphan cleanup for move related tests
system.content.eagerOrphanCleanup=true

simpleContentStores.customStores=globalSiteRoutingStore,defaultTenantFileContentStore,siteRoutingFileStore1,siteRoutingFileStore2,compressingFileFacadeStore,compressingFileStore,deduplicatingFileFacadeStore,deduplicatingFileStore,encryptingFileFacadeStore,encryptingFileStore
simpleContentStores.rootStore=globalSiteRoutingStore

simpleContentStores.customStore.globalSiteRoutingStore.type=siteRoutingStore
# non-site content is stored in default contentstore
simpleContentStores.customStore.globalSiteRoutingStore.ref.fallbackStore=defaultTenantFileContentStore

# simple site-routing file store for arbitrary site content
# "special" generic site names: generic-site-1 and generic-site-2
simpleContentStores.customStore.globalSiteRoutingStore.map.storeBySitePreset.ref.site-dashboard=siteRoutingFileStore1
simpleContentStores.customStore.siteRoutingFileStore1.type=siteRoutingFileStore
simpleContentStores.customStore.siteRoutingFileStore1.value.rootDirectory=${dir.root}/siteRoutingFileStore1/default
simpleContentStores.customStore.siteRoutingFileStore1.map.rootAbsolutePathsBySite.value.explicitly-routed-site-1=${dir.root}/siteRoutingFileStore1/site-1
simpleContentStores.customStore.siteRoutingFileStore1.map.rootAbsolutePathsBySite.value.explicitly-routed-site-2=${dir.root}/siteRoutingFileStore1/site-2
simpleContentStores.customStore.siteRoutingFileStore1.map.rootAbsolutePathsBySitePreset.value.site-dashboard=${dir.root}/siteRoutingFileStore1/.otherSites
simpleContentStores.customStore.siteRoutingFileStore1.value.protocol=srfs-site-store-1
simpleContentStores.customStore.siteRoutingFileStore1.map.protocolsBySitePreset.value.site-dashboard=srfs-site-dashboard-store-1
simpleContentStores.customStore.siteRoutingFileStore1.map.protocolsBySite.value.explicitly-routed-site-1=srfs-explicitly-routed-site-1-store
simpleContentStores.customStore.siteRoutingFileStore1.map.protocolsBySite.value.explicitly-routed-site-2=srfs-explicitly-routed-site-2-store
simpleContentStores.customStore.siteRoutingFileStore1.value.moveStoresOnNodeMoveOrCopy=true
simpleContentStores.customStore.siteRoutingFileStore1.value.useSiteFolderInGenericDirectories=true

# simple site-routing file store for to test different config (non-move)
simpleContentStores.customStore.globalSiteRoutingStore.map.storeBySite.ref.explicitly-routed-site-3=siteRoutingFileStore2
simpleContentStores.customStore.globalSiteRoutingStore.map.storeBySite.ref.explicitly-routed-site-4=siteRoutingFileStore2
simpleContentStores.customStore.globalSiteRoutingStore.map.storeBySite.ref.genericly-routed-site-3=siteRoutingFileStore2
simpleContentStores.customStore.globalSiteRoutingStore.map.storeBySite.ref.genericly-routed-site-4=siteRoutingFileStore2
simpleContentStores.customStore.siteRoutingFileStore2.type=siteRoutingFileStore
simpleContentStores.customStore.siteRoutingFileStore2.value.rootDirectory=${dir.root}/siteRoutingFileStore2/default
simpleContentStores.customStore.siteRoutingFileStore2.map.rootAbsolutePathsBySite.value.explicitly-routed-site-3=${dir.root}/siteRoutingFileStore2/sharedExplicitSites
simpleContentStores.customStore.siteRoutingFileStore2.map.rootAbsolutePathsBySite.value.explicitly-routed-site-4=${dir.root}/siteRoutingFileStore2/sharedExplicitSites
simpleContentStores.customStore.siteRoutingFileStore2.map.rootAbsolutePathsBySitePreset.value.site-dashboard=${dir.root}/siteRoutingFileStore2/sharedGenericSites
simpleContentStores.customStore.siteRoutingFileStore2.value.protocol=srfs-site-store-2
simpleContentStores.customStore.siteRoutingFileStore2.map.protocolsBySitePreset.value.site-dashboard=srfs-site-dashboard-store-2
simpleContentStores.customStore.siteRoutingFileStore2.map.protocolsBySite.value.explicitly-routed-site-3=srfs-explicitly-routed-site-3-store
simpleContentStores.customStore.siteRoutingFileStore2.map.protocolsBySite.value.explicitly-routed-site-4=srfs-explicitly-routed-site-4-store
simpleContentStores.customStore.siteRoutingFileStore2.value.moveStoresOnNodeMoveOrCopy=false
simpleContentStores.customStore.siteRoutingFileStore2.value.useSiteFolderInGenericDirectories=false

# file store with compression facade
simpleContentStores.customStore.globalSiteRoutingStore.map.storeBySite.ref.compressing-file-facade=compressingFileFacadeStore
simpleContentStores.customStore.compressingFileFacadeStore.type=compressingFacadeStore
simpleContentStores.customStore.compressingFileFacadeStore.ref.backingStore=compressingFileStore
simpleContentStores.customStore.compressingFileFacadeStore.list.value.mimetypesToCompress=text/*,application/json,application/xhtml+xml,image/svg+xml,application/eps,application/x-javascript,application/atom+xml,application/rss+xml,message/rfc822

simpleContentStores.customStore.compressingFileStore.type=standardFileStore
simpleContentStores.customStore.compressingFileStore.value.rootDirectory=${dir.root}/compressingFileFacadeStore
simpleContentStores.customStore.compressingFileStore.value.protocol=cffs-store
simpleContentStores.customStore.compressingFileStore.value.allowRandomAccess=true
simpleContentStores.customStore.compressingFileStore.value.deleteEmptyDirs=true
# 1 MiB limit, so it fails to store a small-ish file if not compressed
simpleContentStores.customStore.compressingFileStore.value.fixedLimit=1048576

# file store with deduplicating facade
simpleContentStores.customStore.globalSiteRoutingStore.map.storeBySite.ref.deduplicating-file-facade=deduplicatingFileFacadeStore
simpleContentStores.customStore.deduplicatingFileFacadeStore.type=deduplicatingFacadeStore
simpleContentStores.customStore.deduplicatingFileFacadeStore.ref.backingStore=deduplicatingFileStore

simpleContentStores.customStore.deduplicatingFileStore.type=standardFileStore
simpleContentStores.customStore.deduplicatingFileStore.value.rootDirectory=${dir.root}/deduplicatingFileFacadeStore
simpleContentStores.customStore.deduplicatingFileStore.value.protocol=dffs-store
simpleContentStores.customStore.deduplicatingFileStore.value.allowRandomAccess=true
simpleContentStores.customStore.deduplicatingFileStore.value.deleteEmptyDirs=true

# file store with encrypting facade
simpleContentStores.customStore.globalSiteRoutingStore.map.storeBySite.ref.deduplicating-file-facade=encryptingFileFacadeStore
simpleContentStores.customStore.encryptingFileFacadeStore.type=encryptingFacadeStore
simpleContentStores.customStore.encryptingFileFacadeStore.ref.backingStore=encryptingFileStore
simpleContentStores.customStore.encryptingFileFacadeStore.value.keyStorePath=classpath:alfresco/extension/encryption.keystore
simpleContentStores.customStore.encryptingFileFacadeStore.value.keyStorePassword=dockerTest
# limited by Alfresco database schema to 15 characters
simpleContentStores.customStore.encryptingFileFacadeStore.value.masterKeyAlias=effs
simpleContentStores.customStore.encryptingFileFacadeStore.value.masterKeyPassword=dockerTest
# limited by Alfresco database schema to 20 characters
simpleContentStores.customStore.encryptingFileFacadeStore.value.masterKeyStoreId=scs-effs

simpleContentStores.customStore.encryptingFileStore.type=standardFileStore
simpleContentStores.customStore.encryptingFileStore.value.rootDirectory=${dir.root}/encryptingFileFacadeStore
simpleContentStores.customStore.encryptingFileStore.value.protocol=effs-store
simpleContentStores.customStore.encryptingFileStore.value.allowRandomAccess=true
simpleContentStores.customStore.encryptingFileStore.value.deleteEmptyDirs=true