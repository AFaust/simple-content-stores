<?xml version='1.0' encoding='UTF-8'?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <bean id="${moduleId}-bootstrap" class="${project.artifactId}.beans.SimpleContentStoresBeanDefinitionEmitter">
        <property name="enabledPropertyKey" value="simpleContentStores.enabled" />
        <property name="propertiesSource" ref="global-properties" />
        <property name="rootStoreProxyName" value="${moduleId}-proxy-rootStore" />
    </bean>

    <bean id="${moduleId}-proxy-rootStore" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="proxyInterfaces">
            <list>
                <value>org.alfresco.repo.content.ContentStore</value>
                <value>org.alfresco.repo.content.ContentStoreCaps</value>
            </list>
        </property>
        <!-- marked singleton so it won't be initialised unless SimpleContentStoresBeanDefinitionEmitter has completed the definition -->
        <property name="singleton" value="false" />
        <!-- target will be set by SimpleContentStoresBeanDefinitionEmitter -->
        <property name="interceptorNames">
            <list>
                <idref bean="${moduleId}-contentStoreCapsInterceptor" />
                <idref bean="${moduleId}-initContextInterceptor" />
            </list>
        </property>
    </bean>

    <bean id="${moduleId}-contentStoreCapsInterceptor" class="${project.artifactId}.aop.ContentStoreCapsEmulatingInterceptor" />

    <bean id="${moduleId}-initContextInterceptor" class="${project.artifactId}.aop.InitContentStoreContextInterceptor" />

    <bean class="${project.artifactId}.store.context.SiteAttributesInitializer">
        <property name="siteService" ref="SiteService" />
    </bean>
</beans>